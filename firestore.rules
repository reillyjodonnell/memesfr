rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read;
      allow write: if isSignedIn() && emailVerified();
          
  	}
    //Be sure to change this for the future. As of now users can spam like/dislike
    match /{counters=**} {
    allow read, write, update;
    

    }
    match /users/{userId} {
    	allow read: if isSignedIn();
      allow write: if isOwner(userId) && emailVerified();
      allow delete: if isOwner(userId) && emailVerified();
    }
    //You can only edit a meme if you're the owner of that meme
    match /{memes=**} {
    	allow read;
      allow create: if isSignedIn();
      allow delete, write: if isOwner(resource.data.author) || resource.data.admin == true;
    }
    
    ///How do we prevent a user from spam liking/disliking a post by overwriting React components
    //How to ensure that a user can only increase or decrease count value by 1 
    
    ///Functions////
    
   
    
    function emailVerified(){
    return request.auth.token.email_verified;
    }
    
    function isOwner(userId){
    	return request.auth.uid == userId;
    }
    
    function isSignedIn(){
    return request.auth != null
    }
    
  }
}